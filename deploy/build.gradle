buildscript {
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

//构建可执行jar/war包
configurations {
    providedRuntime
}

//fully executable applications for Unix systems
springBoot {
    executable = true
}

docker {
    baseImage "openjdk:8"
    maintainer 'appEngine "lesofn@gmail.com"'
}

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    version = "${profile}-${project.version}"
    push = false
    doFirst {
        copy {
            from war
            into stageDir
        }
    }
    addFile("${project.name}-${project.version}.war", "/opt")
    workingDir("/opt")
    entryPoint(["/usr/bin/java", "-Djava.security.egd=file:/dev/./urandom", "-jar", "${project.name}-${project.version}.war"])
}

//只对gradle spring-boot:run 有效
ext {
    applicationDefaultJvmArgs = ['-Xmx512M']
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat:$springBootVersion"
    providedRuntime "org.apache.tomcat.embed:tomcat-embed-jasper:$tomcatVersion"
    compile "org.jolokia:jolokia-core:$jolokiaVersion" //JMX

    //web
    compile "org.sitemesh:sitemesh:$sitemeshVersion"
    compile "org.webjars:bootstrap:$webBootstrapVersion"
    compile "org.webjars:jquery:$webJqueryVersion"
    providedRuntime "javax.servlet:jstl:$jstlVersion"

    compile project(":common")
    compile project(":configs")
    compile project(":frame")
    compile project(":user")
    compile project(":task")
}